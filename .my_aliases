#!/usr/local/bin/bash

alias rg="rg --pretty --glob '!tags' --regexp"
alias rgi="rg --pretty --ignore-case --glob '!tags' --regexp"

# -r recursive, -n line number -i case insensitive, -s no messages, -I ignore binary, -S follow symlinks
# -o matching only, -h no filename
alias g="egrep -rnisIS --color"
alias gc="egrep -rnsIS --color"

alias l="gls -l -h --color --group-directories-first  --dereference-command-line-symlink-to-dir --dereference-command-line --dereference"
alias ls="gls -h --color --group-directories-first  --dereference-command-line-symlink-to-dir --dereference-command-line --dereference"

export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!{.git}" 2> /dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
bind -x '"\C-p": fzf_result=$(fzf); [[ ! -z $fzf_result ]] && vim $fzf_result'

parse_git_branch() {
    branch=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/')
    echo "" ${branch}
}

auto_virtualenv() {
    command=$(python3 ~/auto-virtualenv/venv_toggle_command.py --command)
    eval $command
}

virtualenv_info() {
    project_name=$(python3 ~/auto-virtualenv/venv_toggle_command.py --project-name)
    if [[ -n $project_name ]]; then
        echo "($project_name) "
    fi
}

make_ps1() {
    newline="\n"
    host="\[\033[1;30m\][PINS]\[\033[0m\] "
    virtualenv="\[\033[1;32m\]\$(virtualenv_info)\[\033[0m\]"
    working_path="\[\033[1;36m\]\w\[\033[0m\]"
    git="\[\033[1;31m\]\$(parse_git_branch)\[\033[0m\]"
    arrow="\[\033[0;34m\]\n~>\[\033[0m\] "
    echo "$newline$host$virtualenv$working_path$git$arrow"
}


PROMPT_DIRTRIM=5
export VIRTUAL_ENV_DISABLE_PROMPT=1
export PROMPT_COMMAND=auto_virtualenv
export PS1=$(make_ps1);
